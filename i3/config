# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
#
##########
# colors #
##########

# get color from xressource configuration - variable_name xressource_color fallback

# special
set_from_resource $foreground foreground #C6C6C6
set_from_resource $background background #1C1C1C
set_from_resource $cursorColor cursorColor #C6C6C6

# black
set_from_resource $black1 color0 #303030
set_from_resource $black2 color8 #b2b2b2

# red
set_from_resource $red1 color1 #d75f5f
set_from_resource $red2 color9 #d75f5f

# green
set_from_resource $green1 color2 #87AF87
set_from_resource $green2 color10 #87AF87

# yellow
set_from_resource $yellow1 color3 #ffd75f
set_from_resource $yellow2 color11 #ffd75f

# blue
set_from_resource $blue1 color4 #87afd7
set_from_resource $blue2 color12 #87afd7

# magenta
set_from_resource $cyan1 color5 #afafd7
set_from_resource $cyan2 color13 #afafd7

# cyan
set_from_resource $cyan1 color6 #afd7ff
set_from_resource $cyan2 color14 #afd7ff

# white
set_from_resource $white1 color7 #eeeeee
set_from_resource $white2 color15 #ffffff

# window colors
client.background $background


# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $Ctrl Mod2

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:InconsolataGo Nerd Font Mono 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# set desktop background to solid color
exec --no-startup-id xsetroot -solid '$background'

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# control brightness still doesn't work unless i use sudo
# https://unix.stackexchange.com/a/744433
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5

# media player stuff
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause && $refresh_i3status
bindsym XF86AudioNext exec --no-startup-id playerctl next && $refresh_i3status
bindsym XF86AudioPrev exec --no-startup-id playerctl previous && $refresh_i3status

# take a screenshot
bindsym Print exec --no-startup-id screenshot
bindsym Shift+Print exec --no-startup-id "sleep 0.2; screenshot -snip"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run -l 10 -fn 'Inconsolata-g for Powerline' -nf '$foreground' -sb '$red1'

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -i -fn 'Inconsolata-g for Powerline' -nf '$foreground' -sb '$red1'"

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"

bindsym $mod+m exec xrdb -merge ~/.Xresources

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "I"
set $ws2 "II"
set $ws3 "III"
set $ws4 "IV"
set $ws5 "V"
set $ws6 "VI"
set $ws7 "VII"
set $ws8 "VIII"
set $ws9 "IX"
set $ws10 "X"

# # switch to workspace
bindsym $mod+0 workspace $ws1
bindsym $mod+9 workspace $ws2
bindsym $mod+8 workspace $ws3
bindsym $mod+7 workspace $ws4
bindsym $mod+6 workspace $ws5
bindsym $mod+5 workspace $ws6
bindsym $mod+4 workspace $ws7
bindsym $mod+3 workspace $ws8
bindsym $mod+2 workspace $ws9
bindsym $mod+1 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+0 move container to workspace $ws1
bindsym $mod+Shift+9 move container to workspace $ws2
bindsym $mod+Shift+8 move container to workspace $ws3
bindsym $mod+Shift+7 move container to workspace $ws4
bindsym $mod+Shift+6 move container to workspace $ws5
bindsym $mod+Shift+5 move container to workspace $ws6
bindsym $mod+Shift+4 move container to workspace $ws7
bindsym $mod+Shift+3 move container to workspace $ws8
bindsym $mod+Shift+2 move container to workspace $ws9
bindsym $mod+Shift+1 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
        bindsym Control+[ mode "default"
}

bindsym $mod+r mode "resize"
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

### Personal Stuff ###

# start alacritty as default terminal
bindsym $mod+Return exec alacritty
bindsym $mod+Shift+Return exec xterm

# split in horizontal orientation
bindsym $mod+Control+h split h

# split in vertical orientation
bindsym $mod+Control+v split v

# switch back and forth between workspaces with same keystroke
workspace_auto_back_and_forth yes

# disable mouse hover to focus
focus_follows_mouse no

# set the lock screen image
set $i3lockscreen sh ~/.config/i3/lockscreen.sh
bindsym $mod+Control+l exec --no-startup-id $i3lockscreen

# shutdown / restart / suspend
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) re-boot, (Control+s) shutdown

mode "$mode_system" {
        bindsym l exec --no-startup-id $i3lockscreen, mode "default"
        bindsym e exec --no-startup-id i3-msg exit, mode "default"
        bindsym s exec --no-startup-id $i3lockscreen && systemctl suspend, mode "default"
        bindsym h exec --no-startup-id $i3lockscreen && systemctl hibernate, mode "default"
        bindsym r exec --no-startup-id systemctl reboot, mode "default"
        bindsym Control+s exec --no-startup-id systemctl poweroff -i, mode "default"
        bindsym XF86Poweroff exec --no-startup-id systemctl poweroff -i, mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+BackSpace mode "default"
        bindsym Control+[ mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"
bindsym XF86Poweroff mode "$mode_system"
# should I add $mod??

# some apps will float no matter how hard they try
for_window [window_role="pop_up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Spotify"] floating enable
for_window [class="superProductivity"] floating enable
for_window [class="Slack"] floating enable
for_window [class="vlc"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [instance="crx_kjgfgldnnfoeklkmfkjfagphfepbbdan"] floating enable
for_window [instance="crx_agimnkijcaahngcdmfeangaknmldooml"] floating enable
for_window [class="Evince"] floating enable
for_window [class="cinnamon-settings sound"] floating enable
for_window [class="Nemo"] floating enable
for_window [class="xdman-Main"] floating enable
for_window [class="discord"] floating enable
for_window [instance="crx__lgnggepjiihbfdbedefdhcffnmhcahbm"] floating enable
for_window [instance="calibre-ebook-viewer"] floating enable
for_window [class="qBittorrent"] floating enable
for_window [class="zoom"] floating enable
for_window [class="UXTerm"] floating enable
for_window [class="XTerm"] floating enable
for_window [class="cinnamon-settings network"] floating enable
# microsoft edge
assign [class="crx__cifhbcnohmdccbgoicgdjpfamggdegmo" instance="Microsoft-edge"] → $ws2
for_window [class="crx__cifhbcnohmdccbgoicgdjpfamggdegmo"] floating enable

# windows without borders
for_window [class="Google-chrome"] border pixel 0
for_window [class="Microsoft-edge"] border pixel 0
# assign apps to workspaces
# use `xprop | grep -i wm_class` to find instancce and class names
#
# work terminal and text editor live in the workspace 4
assign [class="Code" instance="code"] → $ws3
for_window [class="Code"] floating enable

# work browsers (chrome) leaves in workspace 3
assign [class="Google-chrome" instance="google-chrome"] → $ws4
for_window [class="Google"] floating enable

# spotify, youtube, slack and superproductivity live in the first workspace 1
assign [class="Slack" instance="slack"] → $ws1
assign [class="Spotify" instance="spotify"] → $ws1
assign [class="discord" instance="discord"] → $ws1
# youtube
assign [instance="crx__lgnggepjiihbfdbedefdhcffnmhcahbm"] → $ws1

# non coding stuff
assign [class="Microsoft-edge" instance="microsoft-edge"] → $ws10
# documents and document viewer
assign [class="Evince" instance="evince"] → $ws9
assign [instance="calibre-ebook-viewer"] → $ws9
